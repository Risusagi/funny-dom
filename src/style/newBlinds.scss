@import './modern-normalize.css';

@mixin dimensions($top, $left, $width, $height) {
    position: absolute;
    top: $top;
    left: $left;
    width: $width;
    height: $height;

    .size {
        background-color: rgb(250, 250, 250);
        border: 1px dashed black;
        border-radius: 2px;
        width: 60px;
        height: 24px;
        display: flex;
        justify-content: center;
    }
}

@mixin widthTemplate() {
    border-left: 1px solid black;
    border-right: 1px solid black;

    .size {
        position: relative;
        top: -20px;
        left: 50%;
        transform: translateX(-50%);
    }
}

@mixin heightTemplate() {
    border-top: 1px solid black;
    border-bottom: 1px solid black;

    .size {
        transform: rotate(90deg) translateY(-50%);
        position: absolute;
        top: 50%;
        right: -28px;
    }
}

// MAIN MIXIN
@mixin newBlinds($window-border, $window-height: 72vh, $window-width: 65vw, $window-left: 7vw, $outer-height: 10vh, $inner-height: 7vh) {

    // VARIABLES
    $window-top: 22vh; 

    // STYLES
    body {
        background-color: rgb(238, 237, 225);
        height: 100vh;
    }

    .window {
        position: absolute;
        top: $window-top;
        left: $window-left;
        width: $window-width;
        height: $window-height;
        border: $window-border solid rgb(117, 117, 117);
    }

    .outer-width {
        @include dimensions($window-top - $outer-height, $window-left, $window-width, $outer-height);
        @include widthTemplate();
    }

    .inner-width {
        $top-distance: calc(#{$window-top} - #{$inner-height} + #{$window-border});

        @include dimensions($top-distance, calc(#{$window-left} + #{$window-border}), calc(#{$window-width} - #{$window-border} * 2), $inner-height);
        @include widthTemplate();
    }

    .outer-height {
        @include dimensions($window-top, $window-left + $window-width, $outer-height, $window-height);
        @include heightTemplate();
    }

    .inner-height {
        $top-distance: calc(#{$window-top} + #{$window-border});
        $left-distance: calc(#{$window-left} + #{$window-width} - #{$window-border});
        $height: calc(#{$window-height} - #{$window-border} * 2);

        @include dimensions($top-distance, $left-distance, $inner-height, $height);
        @include heightTemplate();
    }

    // ARROWS
    .arrow {
        width: 13px;
        float: right;
    }

    .left-arrow {
        transform: scaleX(-1);
        float: left;
    }

    .top-arrow {
        transform: rotate(-90deg);
    }

    .bottom-arrow {
        transform: rotate(90deg);
        position: absolute;
        bottom: 0;
        right: 0;
    }

    .arrow-line {
        position: absolute;
        width: calc(100% - 10px * 2);
        height: 1px;
        background-color: black;
        top: 6px;

        &:not(.arrow-line-height) {
            left: 10px;
        }
    }

    .arrow-line-height {
        height: calc(100% - 10px * 2);
        width: 1px;
        top: 10px;
        right: 6px;
    }
    // ARROWS END
}


@media (orientation: portrait) and (min-width: 365px) {
    @include newBlinds($window-border: 20px);
}
@media (orientation: landscape)  {
    @include newBlinds($window-border: 15px, $outer-height: 15vh, $inner-height: 8vh);
}
@media (max-width: 365px) {
    @include newBlinds($window-border: 10px, $window-height: 54vh, $window-width: 60vw, $window-left: 2vw, $outer-height: 10vh, $inner-height: 6vh);

    @mixin size() {
        height: 17px;
        font-size: 14px;
    }
    .window-width  .size {
        @include size();
        top: -13px;
    }
    .window-height .size {
        @include size();
        right: -25px;
    }
}