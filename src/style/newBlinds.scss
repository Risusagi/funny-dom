@import './modern-normalize.css';

// MIXINS
@mixin dimensions($top, $left, $width, $height) {
    position: absolute;
    top: $top;
    left: $left;
    width: $width;
    height: $height;
    .size {
        background-color: rgb(250, 250, 250);
        border-radius: 2px;
        width: 60px;
        display: flex;
        justify-content: center;
    }
}
@mixin widthTemplate() {
    border-left: 1px solid black;
    border-right: 1px solid black;
    .size {
        position: relative;
        top: -22px;
        left: 50%;
        transform: translateX(-50%);
    }
}
@mixin heightTemplate() {
    border-top: 1px solid black;
    border-bottom: 1px solid black;
    .size {
        transform: rotate(90deg) translateY(-50%);
        position: absolute;
        top: 50%;
        right: -26px;
    }
}

// VARIABLES
$window-border: 20px;
$window-top: 20vh;
$window-left: 7vw;
$window-height: 72vh;
$window-width: 65vw;

// STYLES
body {
    background-color: rgb(238, 237, 225);
    height: 100vh;
}
.window {
    position: absolute;
    top: $window-top;
    left: $window-left;
    width: $window-width;
    height: $window-height;
    border: $window-border solid rgb(117, 117, 117);
}

.outer-width {
    $height: 11vh;

    @include dimensions($window-top - $height, $window-left, $window-width, $height);
    @include widthTemplate();    
}
.inner-width {
    min-height: 30px;
    $height: 8vh;
    $top-distance: calc(#{$window-top} - #{$height} + #{$window-border});

    @include dimensions($top-distance, calc(#{$window-left} + #{$window-border}), calc(#{$window-width} - #{$window-border} * 2), $height);
    @include widthTemplate();
}

.outer-height {
    @include dimensions($window-top, $window-left + $window-width, 11vh, $window-height);
    @include heightTemplate();
}
.inner-height {
    $top-distance: calc(#{$window-top} + #{$window-border});
    $left-distance: calc(#{$window-left} + #{$window-width} - #{$window-border});
    $height: calc(#{$window-height} - #{$window-border} * 2);

    @include dimensions($top-distance, $left-distance, 8vh, $height);
    @include heightTemplate();
}

.arrow {
    width: 13px;
    float: right;
}
.left-arrow {
    transform: scaleX(-1);
    float: left;
}
.top-arrow {
    transform: rotate(-90deg);
}
.bottom-arrow {
    transform: rotate(90deg);
    position: absolute;
    bottom: 0;
    right: 0;
}

.arrow-line {
    position: absolute;
    width: calc(100% - 10px * 2);
    height: 1px;
    background-color: black;
    top: 6px;
    &:not(.arrow-line-height) {
        left: 10px;
    }
}
.arrow-line-height {
    height: calc(100% - 10px * 2);
    width: 1px;
    top: 10px;
    right: 6px;
}

